
* Knapsack

** Preamble

#+begin_src R :results output :session
RNGversion(min(as.character(getRversion()),"3.5.3"))

set.seed(42, kind = "Mersenne-Twister", normal.kind = "Inversion")
n <- 2000
knapsack_objects <-
data.frame(
w=sample(1:4000, size = n, replace = TRUE),
v=runif(n, 0, 10000)
)
#+end_src

#+RESULTS:
: Warning message:
: In RNGkind("Mersenne-Twister", "Inversion", "Rounding") :
:   non-uniform 'Rounding' sampler used

** Bruteforce

#+begin_src R :results output
1:10
#+end_src

#+RESULTS:
:  [1]  1  2  3  4  5  6  7  8  9 10


** brute force knapsack
#+begin_src R :results output :session
brute_force_knapsack <- function(x, W){
  subset_max_elements <- NA
  v_sum_max <- NA
  n <- nrow(x)

  for(i in 1:(2^n - 1)){
    subset_elements <- which(intToBits(i) == 1)
    x_subset <- x[subset_elements,]
    x_subset_sums <- colSums(x_subset)

    v_sum <- x_subset_sums['v']
    w_sum <- x_subset_sums['w']

    is_not_to_heavy <- w_sum <= W
    is_largest_observation <- if(is.na(v_sum_max)){TRUE}
                              else {v_sum > v_sum_max}

    if(is_not_to_heavy & is_largest_observation) {
      subset_max_elements <- subset_elements
      v_sum_max <- v_sum
    }

  }

  names(v_sum_max) = NULL
  return(list(value=v_sum_max, elements=subset_max_elements))
}
#+end_src

#+RESULTS:

** playground
#+begin_src R :results output :session
which(intToBits(144) == 1)
#+end_src

#+RESULTS:
: [1] 5 8

#+begin_src R :results output :session
subset_elements <- which(intToBits(144) == 1)
x_subset <- knapsack_objects[1:8,][subset_elements,]
x_subset_sums <- colSums(x_subset)
x_subset_sums['v']
x_subset_sums['w']
#+end_src

#+RESULTS:
:        v 
: 16770.38
:    w 
: 3106

** Reference
#+begin_src R :results output :session
brute_force_knapsack(x = knapsack_objects[1:8,], W = 3500)
$value
[1] 16770
$elements
[1] 5 8
brute_force_knapsack(x = knapsack_objects[1:12,], W = 3500)
$value
[1] 16770
$elements
[1] 5 8
brute_force_knapsack(x = knapsack_objects[1:8,], W = 2000)
$value
[1] 15428
$elements
[1] 3 8
brute_force_knapsack(x = knapsack_objects[1:12,], W = 2000)
$value
[1] 15428
#+end_src
* Memoise
> library ( memoise )
> a <- function ( x ) runif (1)
> replicate (3 , a ())
[1] 0.6709919 0.3490709 0.4772027
> b <- memoise ( a )
> replicate (3 , b ())
[1] 0.1867441 0.1867441 0.1867441


#+begin_src R :results output :session
library (memoise)
a <- function (x) {runif (1)}
replicate (3 , a ())
b <- memoise ( a )
#replicate (3 , b ())
b()
b()
b()

#+end_src

#+RESULTS:
: [1] 0.7147030 0.3818821 0.3979209
: [1] 0.5196788
: [1] 0.5196788
: [1] 0.5196788
